import { useEffect, useState } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import styles from '../styles/Home.module.css'
import {
  ChakraProvider,
  Center,
  Box,
  Button,
  Text,
  Flex,
  FormControl,
  FormLabel,
  FormErrorMessage,
  FormHelperText,
  Input,
} from '@chakra-ui/react'

import firebaseConfig from '../../firebase-config.json'
import { initializeApp } from 'firebase/app'
import { getAuth, createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth'
import { getFirestore, collection, addDoc, doc, getDoc, setDoc, updateDoc } from 'firebase/firestore'

const Home: NextPage = () => {
  const app = initializeApp(firebaseConfig)
  const router = useRouter()

  const [email, setEmail] = useState('')
  const [senha, setSenha] = useState('')

  const changeEmail = (event) => setEmail(event.target.value)
  const changePassword = (event) => setSenha(event.target.value)

  // const [se, setSenha] = useState('')

  const auth = getAuth()
  const [user, setUser] = useState(auth.currentUser && auth.currentUser.email)
  useEffect(() => {
    onAuthStateChanged(auth, (user) => {
      if (user) {
        router.push('/chat')
        console.log('AUTH')
        console.log(user.email)
        setUser(user.email)
      }
    })
  }, [])

  const submit = async () => {
    console.log('APPP')
    console.log(app)

    createUserWithEmailAndPassword(auth, email, senha)
      .then((userCredential) => {
        const user = userCredential.user
        console.log('LOGADUUUUUUUU')
        console.log(user)
        console.log('APPP APOS')
        console.log(app)
      })
      .catch((error) => {
        const errorCode = error.code
        const errorMessage = error.message
        console.log('ERRUUUUUUUUU no login')
        console.log(errorCode)
        console.log(errorMessage)
      })
  }

  // Oq  de fato vai salvar
  const add_DB = async () => {
    const db = getFirestore(app)
    console.log('firestoen')
    console.log(db)

    // const washingtonRef = doc(db, 'cities', 'DV')
    // console.log(washingtonRef)
    // console.log('washingtonRef')
    // const washingtonRef2 = doc(db, 'usuarios', 'nome')
    // console.log('washingtonRef2')

    const usersColletion = collection(db, 'users') //, auth.currentUser.uid)
    console.log('Colletion')
    console.log(usersColletion)
    // console.log(await getDoc(usersColletion))

    const userDoc = doc(db, 'users', auth.currentUser.uid)
    await setDoc(userDoc, {
      name: auth.currentUser.displayName,
      email: auth.currentUser.email,
      sdsadas: auth.currentUser.email,
      chats: {
        '2uidsads': 'id-da-conversa',
      },
    })

    const chatsDoc = doc(db, 'chats')
    await setDoc(chatsDoc, {
      name: auth.currentUser.displayName,
      email: auth.currentUser.email,
      sdsadas: auth.currentUser.email,
      chats: {
        '2uidsads': 'id-da-conversa',
      },
    })
    // await updateDoc(washingtonRef, {
    //   capital: true,
    // })

    // await addDoc(collection(db, 'testeusuarios'), {
    //   idade: 12,
    //   nome: 'Lovelace',
    // })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Center>
          <div>{user || 'TAIS OFF!!!'}</div>
          <Flex direction="column" gap="8px">
            <FormControl>
              <FormLabel>Email</FormLabel>
              <Input type="email" onChange={changeEmail} id="email"></Input>
              <FormErrorMessage>Insira um email válido</FormErrorMessage>
            </FormControl>

            <FormControl>
              <FormLabel>Senha</FormLabel>
              <Input type="password" onChange={changePassword} id="password"></Input>
              <FormErrorMessage>Não caga com a senha não...</FormErrorMessage>
            </FormControl>

            <Button type="submit" onClick={submit} colorScheme="blue">
              Submit
            </Button>

            <Button onClick={add_DB} colorScheme="blue">
              Submitaaa
            </Button>
          </Flex>

          <Box>
            <Text>Bem vbindo</Text>
            <Image
              width="200px"
              height="200px"
              src="https://media.tenor.com/images/3705aad154b22965c6723ac41e56415c/tenor.gif"
            ></Image>
          </Box>
        </Center>
      </main>
    </div>
  )
}

export default Home
